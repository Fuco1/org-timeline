* see generated timeline (do `C-x C-e` after the progn. you can do `M-x runtest` to run again after)
#+begin_src emacs-lisp
(progn
  (defun runtest ()
    (interactive)
    (let*     ((debug-on-error t)
               (org-agenda-files (list (buffer-file-name)))
               (org-agenda-start-day "2017-04-19")
               (org-agenda-span 'day)
               (org-timeline-prepend nil)
               (org-timeline-show-clocked t)
               (org-timeline-dedicated-clocked-line t)
               (org-timeline-overlap-in-new-line nil)
               (org-timeline-emphasize-next-block nil)
               (org-timeline-show-text-in-blocks nil)
               (org-timeline-beginning-of-day-hour 5)
               (org-timeline-keep-elapsed -1)
               (org-timeline-insert-before-text "")) ; not default, but better for tests
      (let ((org-timeline-overlap-in-new-line nil)) ;use this to override defaults
        (org-agenda nil "a"))))
  (runtest))
#+end_src
* TODO
  :LOGBOOK:
  CLOCK: [2017-04-19 Wed 20:59]--[2017-04-19 Wed 21:12] =>  0:13
  :END:
